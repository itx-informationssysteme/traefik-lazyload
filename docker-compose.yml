version: '3.5'

services:
  # reverse-proxy:
  #   image: traefik:v2.4
  #   command:
  #     - --api.insecure
  #     - --providers.docker
  #     - --providers.docker.defaultRule=Host(`{{.Name}}.d0.lan`)
  #     - --entryPoints.web.address=:85
  #     - --entryPoints.web.forwardedHeaders.insecure
  #     - --providers.docker.exposedByDefault=false
  #     - --providers.docker.constraints=Label(`my.zone`,`zone1`)
  #   restart: always
  #   ports:
  #     - "85:85"     # The HTTP port
  #     - "8086:8080" # The Web UI (enabled by --api)
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

  monitor:
    build: .
    labels:
      - traefik.enable=true
      - "traefik.http.routers.lazyload.priority=-100"
      - "traefik.http.routers.lazyload.rule=Host(`whoami.d.lan`, `whoami2.d.lan`, `pdf.d.lan`)"
    environment:
      TLL_STOPATBOOT: true
    networks:
      - traefik-bridge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    image: containous/whoami
    networks:
      - traefik-bridge
    labels:
      - traefik.enable=true
      - "traefik.http.routers.lazywhoami.rule=Host(`whoami.d.lan`)"
      - lazyloader=true

  whoami2:
    image: containous/whoami
    networks:
      - traefik-bridge
    labels:
      - traefik.enable=true
      - "traefik.http.routers.lazywhoami2.rule=Host(`whoami2.d.lan`)"
      - lazyloader=true
      - lazyloader.stopdelay=1m

networks:
  traefik-bridge:
    external: true
    name: traefik-bridge
